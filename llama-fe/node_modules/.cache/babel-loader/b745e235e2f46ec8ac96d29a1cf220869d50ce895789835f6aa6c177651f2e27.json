{"ast":null,"code":"var _jsxFileName = \"/Users/bernicetoh/llamalunch/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TextInput from \"./components/TextInput\";\nimport ChatContainer from \"./components/ChatContainer\";\nimport { getReplyFromQn } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isSent, setIsSent] = useState(false);\n  const [currMsg, setCurrMsg] = useState(null);\n  const [reply, setReply] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [refetch, setRefetch] = useState(false);\n  useEffect(() => {\n    const localMsgsString = localStorage.getItem(\"messages\");\n    let loadedMsgs = [];\n    if (localMsgsString) {\n      localMsgs = JSON.parse(localMsgsString);\n    }\n  }, []);\n  useEffect(() => {\n    const send = async () => {\n      if (isSent && currMsg) {\n        const localMsgsString = localStorage.getItem(\"messages\");\n        let localMsgs = [];\n        if (localMsgsString) {\n          localMsgs = JSON.parse(localMsgsString);\n        }\n        localMsgs.push({\n          isUser: true,\n          message: currMsg\n        });\n        console.log(\"fetching\");\n        const res = await getReplyFromQn(currMsg);\n        setReply(res);\n        localMsgs.push({\n          isUser: false,\n          message: res\n        });\n        localStorage.setItem(\"messages\", JSON.stringify(localMsgs));\n        setMessages(localMsgs);\n        setReply(null);\n      }\n      setIsSent(false);\n    };\n    send();\n  }, [isSent]);\n  useEffect(() => {\n    if (refetch) {\n      setMessages([]);\n      setCurrMsg(null);\n      setReply(null);\n      setRefetch(false);\n    }\n  }, [refetch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-3 pb-3 pl-6 pr-6 w-full h-full flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-bold h-[40px]\",\n        children: \"LlaMa Lunch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        reply: reply,\n        msg: currMsg,\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        setRefetch: setRefetch,\n        setIsSent: setIsSent,\n        setCurrMsg: setCurrMsg,\n        currMsg: currMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 text-sm text-slate-500\",\n        children: [\"Made with\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://ai.meta.com/llama/\",\n          className: \"font-semibold\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Llama2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), \", by Andre Lin, Bernice Toh, Kang Yue Ran\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XRKQFxaFTQnht1i/DiFWAPclRBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TextInput","ChatContainer","getReplyFromQn","jsxDEV","_jsxDEV","App","_s","isSent","setIsSent","currMsg","setCurrMsg","reply","setReply","messages","setMessages","refetch","setRefetch","localMsgsString","localStorage","getItem","loadedMsgs","localMsgs","JSON","parse","send","push","isUser","message","console","log","res","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/bernicetoh/llamalunch/src/App.tsx"],"sourcesContent":["import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport TextInput from \"./components/TextInput\";\nimport ChatContainer from \"./components/ChatContainer\";\nimport cook from \"./assets/cook.png\";\nimport { Message, getReplyFromQn } from \"./utils\";\nfunction App() {\n  const [isSent, setIsSent] = useState(false);\n  const [currMsg, setCurrMsg] = useState<string | null>(null);\n  const [reply, setReply] = useState<string | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [refetch, setRefetch] = useState(false);\n\n  useEffect(() => {\n    const localMsgsString = localStorage.getItem(\"messages\");\n    let loadedMsgs = [];\n    if (localMsgsString) {\n      localMsgs = JSON.parse(localMsgsString);\n    }\n  }, []);\n  useEffect(() => {\n    const send = async () => {\n      if (isSent && currMsg) {\n        const localMsgsString = localStorage.getItem(\"messages\");\n        let localMsgs: Message[] = [];\n        if (localMsgsString) {\n          localMsgs = JSON.parse(localMsgsString);\n        }\n        localMsgs.push({\n          isUser: true,\n          message: currMsg,\n        });\n        console.log(\"fetching\");\n        const res = await getReplyFromQn(currMsg);\n        setReply(res);\n        localMsgs.push({\n          isUser: false,\n          message: res,\n        });\n        localStorage.setItem(\"messages\", JSON.stringify(localMsgs));\n        setMessages(localMsgs);\n        setReply(null);\n      }\n      setIsSent(false);\n    };\n    send();\n  }, [isSent]);\n\n  useEffect(() => {\n    if (refetch) {\n      setMessages([]);\n      setCurrMsg(null);\n      setReply(null);\n      setRefetch(false);\n    }\n  }, [refetch]);\n\n  return (\n    <div className=\"w-screen h-screen flex justify-center\">\n      <div className=\"pt-3 pb-3 pl-6 pr-6 w-full h-full flex flex-col\">\n        <div className=\"text-xl font-bold h-[40px]\">LlaMa Lunch</div>\n        {/* chat container */}\n        <ChatContainer reply={reply} msg={currMsg} messages={messages} />\n        {/* text input */}\n        <TextInput\n          setRefetch={setRefetch}\n          setIsSent={setIsSent}\n          setCurrMsg={setCurrMsg}\n          currMsg={currMsg}\n        />\n        {/* footer */}\n        <div className=\"p-3 text-sm text-slate-500\">\n          Made with{\" \"}\n          <a\n            href=\"https://ai.meta.com/llama/\"\n            className=\"font-semibold\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Llama2\n          </a>\n          , by Andre Lin, Bernice Toh, Kang Yue Ran\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}